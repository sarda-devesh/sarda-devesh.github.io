- layout: left 
  name: Discord Event Bot 
  image_url: images/Bot.png
  link: https://github.com/sarda-devesh/DiscordEventBot
  quote: > 
    A Discord Bot to coordinate group events and server activities 
  description: 
    I utilized the <mark>Discord API</mark> for Python to write the different commands for the bot. The discord bot has commands
    so that the users of a server can create/delete an event, edit an event, join/leave events, and if they indicated that they are
    intrested in a specific event they get a private message reminding them that thier event is about to begin. We allow users to get information
    about upcoming events, and utilized the <mark>datetime</mark> library to ensure that events accomidate for server members in different timezones.
   
- layout: left
  name: Edify
  image_url: images/Edify.png
  link: https://devpost.com/software/zoom-analyser
  quote: > 
    A machine learning tool to help educators gather insight about class engagement
  description: |
    We hosted our website on Horuku which uploads the video and audio files to a <mark>Google Cloud Storage bucket</mark>
    and sends a HTTP request to a <mark>Google Cloud Function</mark> with a randomly generated request id.
    We utilized <mark>Latent Dirichlet Allocation</mark> using the sktlearn libary, Nltk's <mark>Multinomial Naive Bayes</mark>
    library along with <mark>IBM Watson's Speech API</mark> on the audio and chat transcripts to extract student questions and group
    them into relevant categories. Finally, we performed facial recognition using <mark>OPENCV</mark> along with <mark>Siamese Neural Network</mark>
    to track student's attention levels and combine these images with student's ID to automatically take attendace.
    This project received funding from <mark>Google Cloud COVID 19 Hackathon Fund</mark> to continue the further developement of the project. 

- layout: left 
  name: GCS Navigator
  image_url: images/CloudStorage.png
  link: https://github.com/sarda-devesh/GCSNavigator
  quote: >
    A library to easily replacte a GCS Bucket locally
  description: |
    This is an library to download files from <mark>Google Cloud Storage</mark> bucket to the local machine.
    The constructor takes in the path to the service key json file and uses the <mark>GCS Blob Object</mark> to
    allow the users to download specific files, folders, and even entire buckets while preversing the file structure
    of the originial <mark>storage bucket</mark>. 

- layout: left 
  name: Magnetic Pendulum
  image_url: images/magnet_pen.png
  link: https://github.com/sarda-devesh/Magnetic_Pendulum
  quote: >
    A Pendulum Simulator Made using <mark>VPython</mark>
  description: | # this will include new lines to allow paragraphs
    The program starts off with the user choosing the starting point of the pendulum from which the pendulum is launched. 
    The user can then add magnets that either attract or repel the magnet on the pendulum along with choosing the location to add the new magnet.
    The user can also adjust the relative strength of the magnet compared to the graviation field to adjust for various types of magnets. 

- layout: left
  name: Intersect APP
  image_url: images/intersect.png
  link: https://github.com/sarda-devesh/IntersectAPP
  quote: >
    An <mark>Android</mark> application made for team logistics
  description: |
     This is an mobile application that automates team logistics determination. The application utilizes the user's calendar and uploads that data
     to a <mark>Google Firebase</mark>. It then utilizes the calendar data of all the team members to suggest a meeting time that works for all team members along
     with a location that is the <mark>centroid</mark> of all the members. 

- layout: left 
  name: Secure Sticky Notes
  image_url: images/secure.jpg
  link: https://github.com/sarda-devesh/SecureStickyNotes
  quote: > 
     An <mark>Python</mark> program for a sticky notes protected with facial recoginition
  description: |
      The program uses a <mark>Siamese Neural Network</mark> to match faces in the current incoming feed with the registered images of users in previous usages. 
      The facial recongition of this program is similar to Face ID or Windows Hello in terms of usage. Once they log in, the users have a standard sticky notes which
      was developed in <mark>OPENCV</mark>. 

- layout: left 
  name: Equation Solver 
  link: https://github.com/sarda-devesh/EquationSolver
  image_url: images/solver.png
  quote: >
    A <mark>Python</mark> program that solves <mark>polynomial equations</mark> spoken by the user. 
  description: |
    The program starts off the user saying a equation which is captured using the <mark>SpeechRecongizer</mark> library
    and later converted to a solvalble form using the <mark>sympy</mark>. The user also specifies the bound on which to operate on.
    The program then later utilizes <mark>Newton's Method</mark> to generate solutions to the equation. 

- layout: left
  name: AutoGrader
  link: https://github.com/sarda-devesh/TSAApplication
  image_url: images/TSA.png
  quote: > 
      A <mark>Android</mark> application to automate the grading of FRQ Tests
  description: | 
      This was a mobile application I developed for the TSA National Competition. 
      The application utilizes's Google's <mark>Optical Character Recognition</mark> library to convert handwriting to text. 
      We then utilize this information to compare's student's answers to that of the teachers and automatically grade the student.
      The data is stored on a <mark>Google Firebase</mark> so that the teacher can easily retreive it later. 
      Our application <mark>7th place</mark> among about 350 applications at the national competition and <mark>1st</mark> at the state compeititon. 